// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using HungryPizza.Domain.Infra.Contexts;

namespace HungryPizza.Domain.Infra.Migrations
{
    [DbContext(typeof(HungryPizzaContext))]
    partial class HungryPizzaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HungryPizza.Domain.Entities.address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AddressName")
                        .IsRequired()
                        .HasColumnName("AddressName")
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id")
                        .HasName("PK_addressId");

                    b.HasIndex("IdUser");

                    b.ToTable("address");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Idaddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_orderId");

                    b.HasIndex("IdUser");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.Pizza", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id")
                        .HasName("PK_pizzaId");

                    b.HasIndex("OrderId");

                    b.ToTable("Pizza");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.PizzaFlavor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPizza")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdFlavor")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_pizzaFlavorId");

                    b.HasIndex("IdPizza");

                    b.HasIndex("IdFlavor");

                    b.ToTable("PizzaFlavor");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.Flavor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id")
                        .HasName("PK_flavorId");

                    b.ToTable("Flavor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afd43ced-bb64-4b2c-9b6d-358597484320"),
                            Description = "3 Queijos",
                            Price = 50m
                        },
                        new
                        {
                            Id = new Guid("65f94207-10d6-4ffb-841d-8e8fda817555"),
                            Description = "Frango com requeijão ",
                            Price = 59.99m
                        },
                        new
                        {
                            Id = new Guid("3de1e14e-4938-42ec-96b9-a4359f1ff072"),
                            Description = "Mussarela ",
                            Price = 42.5m
                        },
                        new
                        {
                            Id = new Guid("bbb1d0c8-ee7c-4ef5-8d49-9a98293f5c9d"),
                            Description = "Calabresa ",
                            Price = 42.5m
                        },
                        new
                        {
                            Id = new Guid("c06bfce9-12a9-45b1-9bf6-06a23a579c9d"),
                            Description = "Pepperoni",
                            Price = 55m
                        },
                        new
                        {
                            Id = new Guid("06925036-bbec-4e46-b804-5137f3bc02d9"),
                            Description = "Portuguesa ",
                            Price = 45m
                        },
                        new
                        {
                            Id = new Guid("11895cec-1106-400f-a1c6-d1077e21fb1e"),
                            Description = "Veggie ",
                            Price = 59.99m
                        });
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("EmailLogin")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(9)");

                    b.HasKey("Id")
                        .HasName("PK_userId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.address", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.User", "User")
                        .WithMany("addresss")
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.Order", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("IdUser");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.Pizza", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.Order", "Order")
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("HungryPizza.Domain.Entities.PizzaFlavor", b =>
                {
                    b.HasOne("HungryPizza.Domain.Entities.Pizza", "Pizza")
                        .WithMany("PizzaFlavors")
                        .HasForeignKey("IdPizza")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HungryPizza.Domain.Entities.Flavor", "Flavor")
                        .WithMany("PizzaFlavors")
                        .HasForeignKey("IdFlavor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
